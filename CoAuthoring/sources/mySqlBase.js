var config = require('./config.json');var configMySql = config["mysql"];var mysql = require('mysql');var tableChangesName = configMySql["tableChangesName"];var tableCallbacks = configMySql["tableCallbacks"];var pool  = mysql.createPool({	host		: configMySql["host"],	user		: configMySql["user"],	password	: configMySql["pass"],	database	: configMySql["database"],	charset		: configMySql["charset"]});exports.insertChanges = function (objChange, server, documentFormatSave) {	pool.getConnection(function(err, connection) {		var sqlCommand = "INSERT INTO " + tableChangesName +			" (docid, userid, useridoriginal, data, serverHost, serverPort, serverPath, documentFormatSave) VALUES ('"			+ objChange.docid + "','" + objChange.user + "','" + objChange.useridoriginal + "','"			+ objChange.changes + "','" + server.host + "','" + server.port + "','" + server.path			+ "','" + documentFormatSave + "');";		connection.query(sqlCommand, function (error, rows, fields) {			objChange.insertId = rows.insertId;			connection.release();		});	});};exports.updateChanges = function (objChange) {	if (-1 === objChange.insertId) {		console.log("error insertId");		return;	}	pool.getConnection(function(err, connection) {		var sqlCommand = "UPDATE " + tableChangesName +			" SET data='" + objChange.changes + "' WHERE id=" + objChange.insertId + ";";		connection.query(sqlCommand, function () {			connection.release();		});	});};exports.loadChanges = function (callbackFunction) {	pool.getConnection(function(err, connection) {		var sqlCommand = "SELECT * FROM " + tableChangesName + ";";		connection.query(sqlCommand, function (err, result) {			connection.release();			callbackFunction(result);		});	});};exports.insertCallback = function (docId, callback) {	pool.getConnection(function(err, connection) {		var sqlCommand = "INSERT INTO " + tableCallbacks +			" (docId, callback) VALUES ('" + docId + "','" + callback + "');";		connection.query(sqlCommand, function () {			connection.release();		});	});};exports.deleteCallback = function (docId) {	pool.getConnection(function(err, connection) {		var sqlCommand = "DELETE FROM " + tableCallbacks + " WHERE docid='" + docId + "';";		connection.query(sqlCommand, function () {			connection.release();		});	});};